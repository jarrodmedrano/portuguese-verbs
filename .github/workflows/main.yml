---
name: Build and Push Image to AWS ECR
on:
  push:
    branches: [main]
jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: chmod
        run: chmod -R +x ./.github
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - name: Install dependencies
        run: yarn

      - name: Build
        run: npx nps build

      - name: Test
        run: npx nps test
      - name: Automatic Tagging of Releases
        id: increment-git-tag
        run: |
          bash ./.github/scripts/build.sh -v major

      - name: Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push <YOUR_IMAGE>
        uses: docker/build-push-action@v2
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: portuguese-verbs
          IMAGE_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
          CLIENT_PATH: ./packages/client
          API_PATH: ./packages/api
        with:
          context: .
          push: true
          cache-from: type=gha,scope=${IMAGE_TAG}
          cache-to: type=gha,scope=${IMAGE_TAG}
          tags: |
            $ECR_REGISTRY/$ECR_REPOSITORY:${IMAGE_TAG}-latest

      - name: Install Docker Compose
        run: curl -L https://raw.githubusercontent.com/docker/compose-cli/main/scripts/install/install_linux.sh | sh

      - name: Docker context
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          GITHUB_SHA: ${{ github.sha }}
        run: |
          docker context create ecs ecs-context --from-env
          docker --context ecs-context compose up

      # - name: Build, Tag, and Push the Image to Amazon ECR
      #   id: build-image
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPOSITORY: portuguese-verbs
      #     IMAGE_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
      #     CLIENT_PATH: ./packages/client
      #     API_PATH: ./packages/api
      #   run: |
      #     echo "Building the Docker image to $ECR_REGISTRY..."
      #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${IMAGE_TAG}-client . -f ${CLIENT_PATH}/Dockerfile
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:${IMAGE_TAG}-client
      #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${IMAGE_TAG}-api . -f ${API_PATH}/Dockerfile
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:${IMAGE_TAG}-api
